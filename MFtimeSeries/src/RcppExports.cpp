// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// glogdet
double glogdet(arma::mat X);
RcppExport SEXP _MFtimeSeries_glogdet(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(glogdet(X));
    return rcpp_result_gen;
END_RCPP
}
// showMatrix
void showMatrix(arma::mat X, const char* name);
RcppExport SEXP _MFtimeSeries_showMatrix(SEXP XSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const char* >::type name(nameSEXP);
    showMatrix(X, name);
    return R_NilValue;
END_RCPP
}
// kfilter
Rcpp::List kfilter(const arma::mat Y, const arma::mat A, const arma::mat B0, const arma::mat C, const arma::mat H, const arma::mat S, const arma::mat a1, const arma::mat P1, const int N, const int nf);
RcppExport SEXP _MFtimeSeries_kfilter(SEXP YSEXP, SEXP ASEXP, SEXP B0SEXP, SEXP CSEXP, SEXP HSEXP, SEXP SSEXP, SEXP a1SEXP, SEXP P1SEXP, SEXP NSEXP, SEXP nfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type B0(B0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type P1(P1SEXP);
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type nf(nfSEXP);
    rcpp_result_gen = Rcpp::wrap(kfilter(Y, A, B0, C, H, S, a1, P1, N, nf));
    return rcpp_result_gen;
END_RCPP
}
// Estep0002
Rcpp::List Estep0002(const arma::mat Y, const arma::mat A, const arma::mat B, const arma::mat C, const arma::mat H, const arma::mat S, const arma::mat a1, const arma::mat P1, const int N, const int nf);
RcppExport SEXP _MFtimeSeries_Estep0002(SEXP YSEXP, SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP HSEXP, SEXP SSEXP, SEXP a1SEXP, SEXP P1SEXP, SEXP NSEXP, SEXP nfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type P1(P1SEXP);
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type nf(nfSEXP);
    rcpp_result_gen = Rcpp::wrap(Estep0002(Y, A, B, C, H, S, a1, P1, N, nf));
    return rcpp_result_gen;
END_RCPP
}
// Estep0003
Rcpp::List Estep0003(const arma::mat Y, const arma::mat A, const arma::mat B, const arma::mat C, const arma::mat H, const arma::mat S, const arma::mat a1, const arma::mat P1, const int N, const int nf);
RcppExport SEXP _MFtimeSeries_Estep0003(SEXP YSEXP, SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP HSEXP, SEXP SSEXP, SEXP a1SEXP, SEXP P1SEXP, SEXP NSEXP, SEXP nfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type P1(P1SEXP);
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type nf(nfSEXP);
    rcpp_result_gen = Rcpp::wrap(Estep0003(Y, A, B, C, H, S, a1, P1, N, nf));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MFtimeSeries_glogdet", (DL_FUNC) &_MFtimeSeries_glogdet, 1},
    {"_MFtimeSeries_showMatrix", (DL_FUNC) &_MFtimeSeries_showMatrix, 2},
    {"_MFtimeSeries_kfilter", (DL_FUNC) &_MFtimeSeries_kfilter, 10},
    {"_MFtimeSeries_Estep0002", (DL_FUNC) &_MFtimeSeries_Estep0002, 10},
    {"_MFtimeSeries_Estep0003", (DL_FUNC) &_MFtimeSeries_Estep0003, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_MFtimeSeries(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
